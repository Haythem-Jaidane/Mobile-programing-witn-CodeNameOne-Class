package com.mycompany.myapp;


import com.codename1.components.Switch;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Button;
import com.codename1.ui.ButtonGroup;
import com.codename1.ui.CheckBox;
import com.codename1.ui.RadioButton;
import com.codename1.ui.TextArea;
import com.codename1.ui.TextField;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.spinner.Picker;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;
    
    public void viewInterfaceShow(){
        
    }

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        
        
        TextField nom = new TextField("", "Nom", 20, TextArea.ANY);
        TextField Prenom = new TextField("", "Prenom", 20, TextArea.ANY);
        Picker Date = new Picker();
        TextField password = new TextField("", "mot de passe", 20, TextArea.PASSWORD);
        
        Form Gender_Container = new Form("", BoxLayout.x());
        Label Gender = new Label("Gender");
        Switch Gender_button = new Switch();
        Gender_Container.add(Gender);
        Gender_Container.add(Gender_button);
        
        CheckBox Foot = new CheckBox("Foot");
        CheckBox Lecture = new CheckBox("Lecture");
        CheckBox Tenis = new CheckBox("Tenis");
        CheckBox Natation = new CheckBox("Natation");
        
        Button Submit = new Button("Button");
        
        
        Form hi = new Form("Sport Application", BoxLayout.y());
        Form hi2 = new Form("Sport Application", BoxLayout.y());
        
        hi.add(nom);
        hi.add(Prenom);
        hi.add(Date);
        hi.add(password);
        
        hi.add(Gender_Container);
        
        hi.add(Foot);
        hi.add(Lecture);
        hi.add(Tenis);
        hi.add(Natation);
        
        hi.add(Submit);
        hi.show();
        
        Submit.addActionListener(
            new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    
                    Form Name_Container = new Form("", BoxLayout.x());
                    Label Name = new Label("Nom : ");
                    Label Name_ = new Label(nom.getText());
                    Name_Container.add(Name);
                    Name_Container.add(Name_);
        
                    Form Prenom_Container = new Form("", BoxLayout.x());
                    Label Prenom_label = new Label("Prenom : ");
                    Label Prenom_ = new Label(Prenom.getText());
                    Prenom_Container.add(Prenom_label);
                    Prenom_Container.add(Prenom_);
        
                    Form Password_Container = new Form("", BoxLayout.x());
                    Label Password_label = new Label("Password : ");
                    Label Password_ = new Label(password.getText());
                    Password_Container.add(Password_label);
                    Password_Container.add(Password_);
                    
                    Form Date_de_naissance_container = new Form("", BoxLayout.x());
                    Label Date_de_naissance_label = new Label("date de naissance : ");
                    Label Date_de_naissance = new Label(Date.getText());
                    Date_de_naissance_container.add(Date_de_naissance_label);
                    Date_de_naissance_container.add(Date_de_naissance);
        
                    String text;
                    if(Gender_button.isOn()){
                        text = "Femme";
                    }
                    else{
                        text = "Homme";
                    }
                    Form Gender_Container_2 = new Form("", BoxLayout.x());
                    Label Gender_label = new Label("Gender");
                    Label Gender_ = new Label(text);
                    Gender_Container_2.add(Gender_label);
                    Gender_Container_2.add(Gender_);
                    
                    String hobbies = "";
                    
                    if(Foot.isSelected()){
                        hobbies = hobbies.concat("Foot ");
                    }
                    
                    if(Lecture.isSelected()){
                        hobbies = hobbies.concat("Lecture ");
                    }
                    
                    if(Tenis.isSelected()){
                        hobbies = hobbies.concat("Tenis ");
                    }
                    
                    if(Natation.isSelected()){
                        hobbies = hobbies.concat("Natation ");
                    }
        
                    Form hobbies_Container = new Form("", BoxLayout.x());
                    Label hobbies_label = new Label("hobbies : ");
                    Label hobbies_ = new Label(hobbies);
                    hobbies_Container.add(hobbies_label);
                    hobbies_Container.add(hobbies_);
                    
                    hi2.add(Name_Container);
                    hi2.add(Prenom_Container);
                    hi2.add(Password_Container);
                    hi2.add(Date_de_naissance_container);
                    hi2.add(hobbies_Container);
                    
                    hi.showBack();
                    hi2.show();
                }
            }
        );
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
