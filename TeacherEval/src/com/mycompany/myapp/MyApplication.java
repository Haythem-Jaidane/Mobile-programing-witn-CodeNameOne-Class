package com.mycompany.myapp;


import com.codename1.components.ImageViewer;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Button;
import com.codename1.ui.ComboBox;
import com.codename1.ui.EncodedImage;
import com.codename1.ui.Image;
import com.codename1.ui.Slider;
import com.codename1.ui.URLImage;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import java.util.Map;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;
    
    String name;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        Form Interafce1 = new Form("Teacher Eval", BoxLayout.y());
        Form Interafce2 = new Form("Teacher Eval", BoxLayout.y());
        
        ComboBox<String> name_list = new ComboBox<>();
        
        name_list.addItem("Nader Rahmen");
        name_list.addItem("Sana ben Fadhel");
        name_list.addItem("Bassem Htira");
        
        ImageViewer teacher_image = new ImageViewer();
        Label note = new Label("Note : 0");
        
        Slider note_slide = new Slider();
        note_slide.setEditable(true);
        note_slide.setMinValue(0);
        note_slide.setMaxValue(20);
        
        Button btn_valider = new Button("Valider");
        
        Dialog popup = new Dialog("Confirmation");
        Button btn_back=new Button("Back");
        
        Label text = new Label();
        
        
        
        Interafce1.add(name_list);
        Interafce1.show();
        
        Interafce2.add(note);
        Interafce2.add(note_slide);
        Interafce2.add(teacher_image);
        Interafce2.add(btn_valider);
        
        popup.add(text);
        popup.add(btn_back);
        
        name_list.addActionListener(new ActionListener()  {
            
            
            @Override
            public void actionPerformed(ActionEvent evt) {

                name = name_list.getSelectedItem();
                        
                if(name_list.getSelectedIndex()==0){
                    teacher_image.setImage(theme.getImage("nader.png"));
                }
                if(name_list.getSelectedIndex()==1){
                    teacher_image.setImage(theme.getImage("sana.png"));
                }
                if(name_list.getSelectedIndex()==2){
                    teacher_image.setImage(theme.getImage("bassem.png"));
                }
                
                
                Interafce1.showBack();
                Interafce2.show();
            }
        });
         
        note_slide.addActionListener(new ActionListener() {
            
            @Override
            public void actionPerformed(ActionEvent evt) {
                int value = note_slide.getProgress();
                
                
                note.setText("note : "+Integer.toString(value));
            }
        });
        
        btn_valider.addActionListener(new ActionListener() {
            
            @Override
            public void actionPerformed(ActionEvent evt) {
                
                int value = note_slide.getProgress();   
        
                text.setText("Vous avez attribué la note : "+
                                       Integer.toString(value)+
                                       " à Mr/Mme \n"+
                                       name);
                popup.showDialog();
            }
        });
        
        btn_back.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent evt) {
                Interafce1.show();
                
            }
        });
        
        
        
       
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
